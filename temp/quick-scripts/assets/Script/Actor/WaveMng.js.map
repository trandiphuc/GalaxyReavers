{"version":3,"sources":["WaveMng.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","_levelIndex","_content","_waveIndex","_enemyCount","enemy_prefab","default","type","Prefab","onLoad","instance","registerEvent","countEnemyAlive","bind","loader","loadRes","err","object","console","log","json","level","createFirstLevel","getRandom","min","max","Math","random","createAWave","lv","content","map","x","lv_col","col","i","length","row","floor","newEnemy","instantiate","timeInterval","getChildByName","getComponent","interval","newX","newY","setPosition","node","addChild","num_wave","scheduleOnce","start"],"mappings":"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","file":"WaveMng.js","sourceRoot":"../../../../../assets/Script/Actor","sourcesContent":["const Emitter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _levelIndex: 1,\n        _content: null,\n        _waveIndex: 1,\n        _enemyCount: 0,\n        enemy_prefab: {\n            default: [],\n            type: cc.Prefab\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this._levelIndex = 1;\n        Emitter.instance.registerEvent('enemy_destroy', this.countEnemyAlive.bind(this));\n        cc.loader.loadRes('waveConfig.json', function (err, object) {\n            if (err) {\n                console.log(err);\n                return;\n            }\n            this._content = object.json.level[this._levelIndex];\n            this.createFirstLevel();\n        }.bind(this));\n    },\n    getRandom(min, max) {\n        return Math.random() * (max - min) + min;\n    },\n    createFirstLevel(){\n        this._waveIndex = 1;\n        this.createAWave();\n    },\n    createAWave(){\n        let lv = this._content[this._waveIndex].content.map(x => x);\n        let lv_col = this._content[this._waveIndex].col;\n        for(let i = 0; i < lv.length; i++) {\n            let col = i % lv_col;\n            let row = Math.floor(i / lv_col);\n            if(lv[i] == '1'){\n                this._enemyCount++;\n                let newEnemy = cc.instantiate(this.enemy_prefab[0]);\n                let timeInterval = this.getRandom(1, 20);\n                newEnemy.getChildByName('weapon').getComponent('EnemyWeapon').interval = timeInterval;\n                let newX = (col * 50) - (50)*lv_col/2+25;\n                let newY = 200 + (50 * row);\n                newEnemy.setPosition(newX, newY);\n                this.node.addChild(newEnemy);\n            } else if(lv[i] == '2') {\n                this._enemyCount++;\n                let newEnemy = cc.instantiate(this.enemy_prefab[1]);\n                let newX = (col * 50) - (50)*lv_col/2+25;\n                let newY = 200 + (50 * row);\n                newEnemy.setPosition(newX, newY);\n                this.node.addChild(newEnemy);\n            }\n        }\n        cc.log(this._enemyCount);\n    },\n    countEnemyAlive() {\n        this._enemyCount--;\n        if(this._enemyCount == 0) {\n            this._waveIndex++;\n            if(this._waveIndex <= this._content.num_wave)\n            {\n                this.scheduleOnce(this.createAWave, 3);\n            } else cc.log('win oi');\n        };\n    },\n    start () {\n        \n    },\n\n    // update (dt) {},\n});\n"]}