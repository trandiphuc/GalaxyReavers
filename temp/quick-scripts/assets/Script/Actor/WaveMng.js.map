{"version":3,"sources":["WaveMng.js"],"names":["Emitter","require","mEmitter","cc","Class","extends","Component","properties","_levelIndex","default","serializable","_content","_waveIndex","_enemyCount","waveLabel","Label","levelLabel","enemy_prefab","type","Prefab","onLoad","instance","registerEvent","countEnemyAlive","bind","loader","loadRes","err","object","console","log","json","level","createFirstLevel","getRandom","min","max","Math","random","node","active","string","scheduleOnce","createAWave","setLevelIndex","value","getLevelIndex","lv","content","map","x","lv_col","col","i","length","row","floor","newEnemy","instantiate","timeInterval","getChildByName","getComponent","interval","newX","newY","setPosition","addChild","tween","to","y","start","num_wave","delay","call","director","loadScene","emit","finishedLevel","parseInt","sys","localStorage","getItem","setItem","getBlock","getScene","setIsBlock","isblock"],"mappings":"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","file":"WaveMng.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Actor","sourcesContent":["const Emitter = require('Emitter');\r\nconst mEmitter = require('../Emitter');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _levelIndex:{\r\n            default: 1,\r\n            serializable: false,\r\n        },\r\n        _content: null,\r\n        _waveIndex: 0,\r\n        _enemyCount: 0,\r\n        waveLabel: cc.Label,\r\n        levelLabel: cc.Label,\r\n        enemy_prefab: {\r\n            default: [],\r\n            type: cc.Prefab\r\n        },\r\n    },\r\n\r\n    onLoad() {\r\n        Emitter.instance.registerEvent('enemy_destroy', this.countEnemyAlive.bind(this));\r\n        cc.loader.loadRes('waveConfig.json', function (err, object) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            this._content = object.json.level[this._levelIndex];\r\n            this.createFirstLevel()\r\n        }.bind(this));\r\n    },\r\n    getRandom(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    },\r\n\r\n    createFirstLevel() {\r\n        this._waveIndex = 1;\r\n        this.waveLabel.node.active = true;\r\n        this.levelLabel.node.active = true;\r\n        this.waveLabel.string = 'wave ' + this._waveIndex;\r\n        this.levelLabel.string = 'level ' + this._levelIndex;\r\n        this.scheduleOnce(this.createAWave, 3);\r\n    },\r\n\r\n    setLevelIndex(value) {\r\n        this._levelIndex = value;\r\n    },\r\n\r\n    getLevelIndex() {\r\n        return this._levelIndex;\r\n    },\r\n\r\n    createAWave() {\r\n\r\n        this.levelLabel.node.active = false;\r\n        this.waveLabel.node.active = false;\r\n        let lv = this._content[this._waveIndex].content.map(x => x);\r\n        let lv_col = this._content[this._waveIndex].col;\r\n        for (let i = 0; i < lv.length; i++) {\r\n            let col = i % lv_col;\r\n            let row = Math.floor(i / lv_col);\r\n            if (lv[i] == '1') {\r\n                this._enemyCount++;\r\n                let newEnemy = cc.instantiate(this.enemy_prefab[0]);\r\n                let timeInterval = this.getRandom(1, 20);\r\n                newEnemy.getChildByName('weapon').getComponent('EnemyWeapon').interval = timeInterval;\r\n                let newX = (col * 100) - (100) * lv_col / 2 + 50;\r\n                let newY = 300 + (120 * row);\r\n                newEnemy.setPosition(0, 1000);\r\n                this.node.addChild(newEnemy);\r\n                cc.tween(newEnemy)\r\n                    .to(1, {x: newX, y: newY})\r\n                    .start();\r\n            } else if (lv[i] == '2') {\r\n                this._enemyCount++;\r\n                let newEnemy = cc.instantiate(this.enemy_prefab[1]);\r\n                let newX = (col * 100) - (100) * lv_col / 2 + 50;\r\n                let newY = 300 + (120 * row);\r\n                newEnemy.setPosition(0, 1000);\r\n                this.node.addChild(newEnemy);\r\n                cc.tween(newEnemy)\r\n                .to(1, {x: newX, y: newY})\r\n                .start();\r\n            }\r\n            else if (lv[i] == '3') {\r\n                this._enemyCount++;\r\n                let newEnemy = cc.instantiate(this.enemy_prefab[2]);\r\n                let newX = 0;\r\n                let newY = 400;\r\n                newEnemy.setPosition(0, 1000);\r\n                this.node.addChild(newEnemy);\r\n                cc.tween(newEnemy)\r\n                .to(1, {x: newX, y: newY})\r\n                .start();\r\n            } else if (lv[i] == '4') {\r\n                this._enemyCount++;\r\n                let newEnemy = cc.instantiate(this.enemy_prefab[3]);\r\n                let newX = 0;\r\n                let newY = 400;\r\n                newEnemy.setPosition(0, 1000);\r\n                this.node.addChild(newEnemy);\r\n                cc.tween(newEnemy)\r\n                .to(1, {x: newX, y: newY})\r\n                .start();\r\n            } else if (lv[i] == '5') {\r\n                this._enemyCount++;\r\n                let newEnemy = cc.instantiate(this.enemy_prefab[4]);\r\n                let newX = 0;\r\n                let newY = 400;\r\n                newEnemy.setPosition(0, 1000);\r\n                this.node.addChild(newEnemy);\r\n                cc.tween(newEnemy)\r\n                .to(1, {x: newX, y: newY})\r\n                .start();\r\n            }\r\n        }\r\n    },\r\n    countEnemyAlive() {\r\n        this._enemyCount--;\r\n        if (this._enemyCount == 0) {\r\n            this._waveIndex++;\r\n            this.waveLabel.node.active = true;\r\n            this.waveLabel.string = \"wave \" + this._waveIndex;\r\n            if (this._waveIndex <= this._content.num_wave) {\r\n                this.scheduleOnce(this.createAWave, 3);\r\n            } else {\r\n                if (this._levelIndex === 3) {\r\n                    this.waveLabel.node.active = false;\r\n                    cc.tween(this.node)\r\n                        .delay(3)\r\n                        .call(()=>{\r\n                            cc.director.loadScene('Menu', (()=>{\r\n                                mEmitter.instance.emit('changeScreen', 'wingame');\r\n                            }))\r\n                        })\r\n                        .start();\r\n                } else {\r\n                    this.waveLabel.node.active = false;\r\n                    let finishedLevel = parseInt(cc.sys.localStorage.getItem(\"finishLevel\") || 0)\r\n                    if(this._levelIndex > finishedLevel){\r\n                        cc.sys.localStorage.setItem(\"finishLevel\", this._levelIndex);\r\n                    }\r\n                    cc.director.loadScene('ChooseLevel', (() => {\r\n                        let getBlock = cc.director.getScene().getChildByName('Canvas').getChildByName('Level').getComponent('ChooseLevel');\r\n                        getBlock.setIsBlock(this.isblock);\r\n                    }));\r\n                }\r\n            };\r\n        };\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}