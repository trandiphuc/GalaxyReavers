{"version":3,"sources":["../../../../../assets/Script/Actor/assets/Script/Actor/WaveMng.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","_levelIndex","_content","_waveIndex","_enemyCount","enemy_prefab","default","type","Prefab","isblock","onLoad","instance","registerEvent","countEnemyAlive","bind","loader","loadRes","err","object","console","log","json","level","createFirstLevel","getRandom","min","max","Math","random","createAWave","setLevelIndex","value","getLevelIndex","lv","content","map","x","lv_col","col","i","length","row","floor","newEnemy","instantiate","timeInterval","getChildByName","getComponent","interval","newX","newY","setPosition","node","addChild","num_wave","scheduleOnce","director","loadScene","getBlock","getScene","setIsBlock","start"],"mappings":"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","file":"WaveMng.js","sourceRoot":"../../../../../assets/Script/Actor","sourcesContent":["const Emitter = require('Emitter');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _levelIndex: 1,\n        _content: null,\n        _waveIndex: 1,\n        _enemyCount: 0,\n        enemy_prefab: {\n            default: [],\n            type: cc.Prefab\n        },\n        isblock: true,\n    },\n\n    onLoad() {\n        Emitter.instance.registerEvent('enemy_destroy', this.countEnemyAlive.bind(this));\n        cc.loader.loadRes('waveConfig.json', function (err, object) {\n            if (err) {\n                console.log(err);\n                return;\n            }\n            this._content = object.json.level[this._levelIndex];\n            this.createFirstLevel();\n        }.bind(this));\n    },\n    getRandom(min, max) {\n        return Math.random() * (max - min) + min;\n    },\n\n    createFirstLevel() {\n        this._waveIndex = 1;\n        this.createAWave();\n    },\n\n    setLevelIndex(value) {\n        this._levelIndex = value;\n    },\n\n    getLevelIndex() {\n        return this._levelIndex;\n    },\n\n    createAWave() {\n        let lv = this._content[this._waveIndex].content.map(x => x);\n        let lv_col = this._content[this._waveIndex].col;\n        for (let i = 0; i < lv.length; i++) {\n            let col = i % lv_col;\n            let row = Math.floor(i / lv_col);\n            if (lv[i] == '1') {\n                this._enemyCount++;\n                let newEnemy = cc.instantiate(this.enemy_prefab[0]);\n                let timeInterval = this.getRandom(1, 20);\n                newEnemy.getChildByName('weapon').getComponent('EnemyWeapon').interval = timeInterval;\n                let newX = (col * 100) - (100) * lv_col / 2 + 50;\n                let newY = 300 + (120 * row);\n                newEnemy.setPosition(newX, newY);\n                this.node.addChild(newEnemy);\n            } else if (lv[i] == '2') {\n                this._enemyCount++;\n                let newEnemy = cc.instantiate(this.enemy_prefab[1]);\n                let newX = (col * 100) - (100) * lv_col / 2 + 50;\n                let newY = 300 + (120 * row);\n                newEnemy.setPosition(newX, newY);\n                this.node.addChild(newEnemy);\n            }\n            else if (lv[i] == '3') {\n                this._enemyCount++;\n                let newEnemy = cc.instantiate(this.enemy_prefab[2]);\n                let newX = 0;\n                let newY = 400;\n                newEnemy.setPosition(newX, newY);\n                this.node.addChild(newEnemy);\n            }\n        }\n    },\n    countEnemyAlive() {\n        this._enemyCount--;\n        if (this._enemyCount == 0) {\n            this._waveIndex++;\n            if (this._waveIndex <= this._content.num_wave) {\n                this.scheduleOnce(this.createAWave, 3);\n            } else {\n                if (this._levelIndex === 3) {\n                    //To do TRanform Screen Win\n                } else {\n                    this.isblock = false;\n                    cc.director.loadScene('ChooseLevel', (() => {\n                        let getBlock = cc.director.getScene().getChildByName('Canvas').getChildByName('Level').getComponent('ChooseLevel');\n                        getBlock.setIsBlock(this.isblock);\n                    }));\n                }\n            };\n        };\n    },\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n"]}